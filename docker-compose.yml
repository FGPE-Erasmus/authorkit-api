version: '3.7'
services:
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: fgpe-authorkit-api
    restart: unless-stopped
    depends_on:
      - db
      - redis
    volumes:
      - ./src:/usr/src/app/src
      - ./.env:/usr/src/app/.env
    networks:
      - fgpe-authorkit-api-network

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: fgpe-authorkit-api-nginx
    restart: unless-stopped
    depends_on:
      - api
    environment:
      - API_HOST=api
      - API_PORT=3001
      - NGINX_SERVER_NAME=_
      - NGINX_MAX_BODY=100M
    ports:
      - 80:80
    networks:
      - fgpe-authorkit-api-network

  # KEYCLOAK START

  keycloak:
    image: fgpe/keycloak:latest
    restart: unless-stopped
    volumes:
      - ./docker/keycloak/fgpe-realm.json:/tmp/fgpe-realm.json
      - ./docker/keycloak/profile.properties:/opt/jboss/keycloak/standalone/configuration/profile.properties
    ports:
      - 8081:8080
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak-postgres
      - DB_PORT=5433
      - DB_SCHEMA=public
      - DB_DATABASE=keycloakdb
      - DB_USER=admin
      - DB_PASSWORD=password
      - KEYCLOAK_IMPORT=/tmp/fgpe-realm.json
      - KEYCLOAK_USER=${AUTH_KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_PASSWORD=${AUTH_KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_MIGRATION_STRATEGY=OVERWRITE_EXISTING
    networks:
      - fgpe-authorkit-api-network

  keycloak-postgres:
    image: postgres:11-alpine
    restart: unless-stopped
    volumes:
      # - ./docker/keycloak/postgres:/var/lib/postgresql ##workaround for windows
      - ./docker/keycloak/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloakdb
      - PGDATA=/var/lib/postgresql/data/pgdata
    expose:
      - 5433
    ports:
      - 5433:5433
    networks:
      - fgpe-authorkit-api-network
    command: -p 5433
  # KEYCLOAK END

  # MongoDB
  # db:
  #   image: mongo:latest
  #   container_name: fgpe-authorkit-api-db
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: gkw\CmTcr0,Yf~oe65pEh^EJ
  #     MONGO_INITDB_DATABASE: fgpe-authorkit
  #     MONGO_USERNAME: fgpe
  #     MONGO_PASSWORD: 3abd5yPMaZjh9HfGPTGSEbkoWFNVVm
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ./docker/mongodb/data:/data/db
  #     - ./docker/mongodb/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
  #   networks:
  #     - fgpe-authorkit-api-network

  # MariaDB
  # db:
  #   image: mariadb:10.3.17
  #   container_name: fgpe-authorkit-api-db
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_ROOT_HOST: \%
  #     MYSQL_ROOT_PASSWORD: gkw\CmTcr0,Yf~oe65pEh^EJ
  #     MYSQL_USERNAME: fgpe
  #     MYSQL_PASSWORD: 3abd5yPMaZjh9HfGPTGSEbkoWFNVVm
  #     MYSQL_DATABASE: fgpe-authorkit
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - ./docker/mariadb/data:/var/lib/mysql
  #     - ./docker/mariadb/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
  #   networks:
  #     - fgpe-authorkit-api-network

  # PostgreSQL
  db:
    image: postgres:11.5-alpine
    container_name: fgpe-authorkit-api-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: fgpe
      POSTGRES_PASSWORD: 3abd5yPMaZjh9HfGPTGSEbkoWFNVVm
      POSTGRES_DB: fgpe-authorkit
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    networks:
      - fgpe-authorkit-api-network

  # Redis to support queueing
  redis:
    image: redis
    container_name: fgpe-authorkit-api-queueing
    ports:
      - 6379:6379
    networks:
      - fgpe-authorkit-api-network

networks:
  fgpe-authorkit-api-network:
    driver: bridge
